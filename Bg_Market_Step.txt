.include "macro.inc"

# assembler directives
.set noat      # allow manual use of $at
.set noreorder # don't insert nops after branches
.set gp=64     # allow use of 64-bit general purpose registers

.section .text
glabel func_80AF0060
/* 00000 80AF0060 27BDFFE8 */  addiu   $sp, $sp, 0xFFE8           ## $sp = FFFFFFE8
/* 00004 80AF0064 AFBF0014 */  sw      $ra, 0x0014($sp)           
/* 00008 80AF0068 AFA5001C */  sw      $a1, 0x001C($sp)           
/* 0000C 80AF006C 3C0580AF */  lui     $a1, %hi(D_80AF0110)       ## $a1 = 80AF0000
/* 00010 80AF0070 0C03FEB7 */  jal     func_800FFADC              
/* 00014 80AF0074 24A50110 */  addiu   $a1, $a1, %lo(D_80AF0110)  ## $a1 = 80AF0110
/* 00018 80AF0078 8FBF0014 */  lw      $ra, 0x0014($sp)           
/* 0001C 80AF007C 27BD0018 */  addiu   $sp, $sp, 0x0018           ## $sp = 00000000
/* 00020 80AF0080 03E00008 */  jr      $ra                        
/* 00024 80AF0084 00000000 */  nop


glabel func_80AF0088
/* 00028 80AF0088 27BDFFE0 */  addiu   $sp, $sp, 0xFFE0           ## $sp = FFFFFFE0
/* 0002C 80AF008C AFBF0014 */  sw      $ra, 0x0014($sp)           
/* 00030 80AF0090 AFA50024 */  sw      $a1, 0x0024($sp)           
/* 00034 80AF0094 00803025 */  or      $a2, $a0, $zero            ## $a2 = 00000000
/* 00038 80AF0098 84C2001C */  lh      $v0, 0x001C($a2)           ## 0000001C
/* 0003C 80AF009C 3C0580AF */  lui     $a1, %hi(D_80AF0120)       ## $a1 = 80AF0000
/* 00040 80AF00A0 8FA40024 */  lw      $a0, 0x0024($sp)           
/* 00044 80AF00A4 30420001 */  andi    $v0, $v0, 0x0001           ## $v0 = 00000000
/* 00048 80AF00A8 00021880 */  sll     $v1, $v0,  2               
/* 0004C 80AF00AC 00A32821 */  addu    $a1, $a1, $v1              
/* 00050 80AF00B0 8CA50120 */  lw      $a1, %lo(D_80AF0120)($a1)  
/* 00054 80AF00B4 0C02F7F0 */  jal     func_800BDFC0              
/* 00058 80AF00B8 AFA30018 */  sw      $v1, 0x0018($sp)           
/* 0005C 80AF00BC 8FA30018 */  lw      $v1, 0x0018($sp)           
/* 00060 80AF00C0 3C0580AF */  lui     $a1, %hi(D_80AF0128)       ## $a1 = 80AF0000
/* 00064 80AF00C4 8FA40024 */  lw      $a0, 0x0024($sp)           
/* 00068 80AF00C8 00A32821 */  addu    $a1, $a1, $v1              
/* 0006C 80AF00CC 0C02F7F0 */  jal     func_800BDFC0              
/* 00070 80AF00D0 8CA50128 */  lw      $a1, %lo(D_80AF0128)($a1)  
/* 00074 80AF00D4 8FBF0014 */  lw      $ra, 0x0014($sp)           
/* 00078 80AF00D8 27BD0020 */  addiu   $sp, $sp, 0x0020           ## $sp = 00000000
/* 0007C 80AF00DC 03E00008 */  jr      $ra                        
/* 00080 80AF00E0 00000000 */  nop
/* 00084 80AF00E4 00000000 */  nop
/* 00088 80AF00E8 00000000 */  nop
/* 0008C 80AF00EC 00000000 */  nop

.section .data

D_80AF00F0: .word 0x01CC0100, 0x10000020, 0x01B00000, 0x00000144
.word func_80AF0060
.word 0x800BDFB0, 0x800BDFB0
.word func_80AF0088
D_80AF0110: .word 0xB0FC0001, 0xB1000001, 0xB1040001, 0x485803E8
D_80AF0120: .word 0x0601F050, 0x06018DA0
D_80AF0128: .word 0x0601EF10, 0x06018C60

.section .rodata



.section .rodata
D_80AF0130:
.incbin "baserom/Bg_Market_Step", 0xD0, 0x00000040
